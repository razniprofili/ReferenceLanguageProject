package ReferenceLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptArticle = createDescriptorForArticle();
  /*package*/ final ConceptDescriptor myConceptAuthor = createDescriptorForAuthor();
  /*package*/ final ConceptDescriptor myConceptInBook = createDescriptorForInBook();
  /*package*/ final ConceptDescriptor myConceptInProceedings = createDescriptorForInProceedings();
  /*package*/ final ConceptDescriptor myConceptPhdThesis = createDescriptorForPhdThesis();
  /*package*/ final EnumerationDescriptor myEnumerationMonth = new EnumerationDescriptor_Month();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptArticle, myConceptAuthor, myConceptInBook, myConceptInProceedings, myConceptPhdThesis);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Article:
        return myConceptArticle;
      case LanguageConceptSwitch.Author:
        return myConceptAuthor;
      case LanguageConceptSwitch.InBook:
        return myConceptInBook;
      case LanguageConceptSwitch.InProceedings:
        return myConceptInProceedings;
      case LanguageConceptSwitch.PhdThesis:
        return myConceptPhdThesis;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationMonth);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForArticle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "Article", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd30fbfaL);
    b.class_(false, false, false);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/1874583808866581498");
    b.version(2);
    b.property("title", 0x1a03dc0acd30fbfeL).type(PrimitiveTypeId.STRING).origin("1874583808866581502").done();
    b.property("journal", 0x1a03dc0acd30fc01L).type(PrimitiveTypeId.STRING).origin("1874583808866581505").done();
    b.property("year", 0x1a03dc0acd30fc06L).type(PrimitiveTypeId.INTEGER).origin("1874583808866581510").done();
    b.property("volume", 0x1a03dc0acd30fc0dL).type(PrimitiveTypeId.STRING).origin("1874583808866581517").done();
    b.property("number", 0x1a03dc0acd30fc16L).type(PrimitiveTypeId.STRING).origin("1874583808866581526").done();
    b.property("pages", 0x1a03dc0acd30fc21L).type(PrimitiveTypeId.STRING).origin("1874583808866581537").done();
    b.aggregate("authors", 0x1a03dc0acd30fbfbL).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(true).origin("1874583808866581499").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAuthor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "Author", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L);
    b.class_(false, false, false);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/1874583808865381184");
    b.version(2);
    b.property("name", 0x1a03dc0acd30fd73L).type(PrimitiveTypeId.STRING).origin("1874583808866581875").done();
    b.property("middleName", 0x1a03dc0acd30fd76L).type(PrimitiveTypeId.STRING).origin("1874583808866581878").done();
    b.property("surname", 0x1a03dc0acd30fd7bL).type(PrimitiveTypeId.STRING).origin("1874583808866581883").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInBook() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "InBook", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd30fc2eL);
    b.class_(false, false, false);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/1874583808866581550");
    b.version(2);
    b.property("title", 0x1a03dc0acd30fc32L).type(PrimitiveTypeId.STRING).origin("1874583808866581554").done();
    b.property("bookTitle", 0x1a03dc0acd30fc35L).type(PrimitiveTypeId.STRING).origin("1874583808866581557").done();
    b.property("year", 0x1a03dc0acd30fc3aL).type(PrimitiveTypeId.STRING).origin("1874583808866581562").done();
    b.property("publisher", 0x1a03dc0acd30fc41L).type(PrimitiveTypeId.STRING).origin("1874583808866581569").done();
    b.property("address", 0x1a03dc0acd30fc4aL).type(PrimitiveTypeId.STRING).origin("1874583808866581578").done();
    b.property("pages", 0x1a03dc0acd30fc55L).type(PrimitiveTypeId.STRING).origin("1874583808866581589").done();
    b.aggregate("authors", 0x1a03dc0acd30fc2fL).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(true).origin("1874583808866581551").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInProceedings() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "InProceedings", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd30fc62L);
    b.class_(false, false, false);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/1874583808866581602");
    b.version(2);
    b.property("title", 0x1a03dc0acd30fc66L).type(PrimitiveTypeId.STRING).origin("1874583808866581606").done();
    b.property("bookTitle", 0x1a03dc0acd30fc69L).type(PrimitiveTypeId.STRING).origin("1874583808866581609").done();
    b.property("series", 0x1a03dc0acd30fc6eL).type(PrimitiveTypeId.STRING).origin("1874583808866581614").done();
    b.property("year", 0x1a03dc0acd30fc75L).type(PrimitiveTypeId.INTEGER).origin("1874583808866581621").done();
    b.property("pages", 0x1a03dc0acd30fc7eL).type(PrimitiveTypeId.STRING).origin("1874583808866581630").done();
    b.property("publisher", 0x1a03dc0acd30fc89L).type(PrimitiveTypeId.STRING).origin("1874583808866581641").done();
    b.property("address", 0x1a03dc0acd30fc96L).type(PrimitiveTypeId.STRING).origin("1874583808866581654").done();
    b.aggregate("authors", 0x1a03dc0acd30fc63L).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(true).origin("1874583808866581603").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPhdThesis() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "PhdThesis", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd30fca5L);
    b.class_(false, false, false);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/1874583808866581669");
    b.version(2);
    b.property("title", 0x1a03dc0acd30fca9L).type(PrimitiveTypeId.STRING).origin("1874583808866581673").done();
    b.property("school", 0x1a03dc0acd30fcacL).type(PrimitiveTypeId.STRING).origin("1874583808866581676").done();
    b.property("address", 0x1a03dc0acd30fcb1L).type(PrimitiveTypeId.STRING).origin("1874583808866581681").done();
    b.property("year", 0x1a03dc0acd30fcb8L).type(PrimitiveTypeId.INTEGER).origin("1874583808866581688").done();
    b.property("month", 0x1a03dc0acd30fcc1L).type(MetaIdFactory.dataTypeId(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd30fcccL)).origin("1874583808866581697").done();
    b.aggregate("author", 0x1a03dc0acd30fca6L).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(false).origin("1874583808866581670").done();
    return b.create();
  }
}
