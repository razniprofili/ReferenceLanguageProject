package ReferenceLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptArticle = createDescriptorForArticle();
  /*package*/ final ConceptDescriptor myConceptAuthor = createDescriptorForAuthor();
  /*package*/ final ConceptDescriptor myConceptBook = createDescriptorForBook();
  /*package*/ final ConceptDescriptor myConceptBooklet = createDescriptorForBooklet();
  /*package*/ final ConceptDescriptor myConceptConference = createDescriptorForConference();
  /*package*/ final ConceptDescriptor myConceptInBook = createDescriptorForInBook();
  /*package*/ final ConceptDescriptor myConceptInProceedings = createDescriptorForInProceedings();
  /*package*/ final ConceptDescriptor myConceptIncollection = createDescriptorForIncollection();
  /*package*/ final ConceptDescriptor myConceptLibraries = createDescriptorForLibraries();
  /*package*/ final ConceptDescriptor myConceptManual = createDescriptorForManual();
  /*package*/ final ConceptDescriptor myConceptMasterThesis = createDescriptorForMasterThesis();
  /*package*/ final ConceptDescriptor myConceptMisc = createDescriptorForMisc();
  /*package*/ final ConceptDescriptor myConceptPhdThesis = createDescriptorForPhdThesis();
  /*package*/ final ConceptDescriptor myConceptProceedings = createDescriptorForProceedings();
  /*package*/ final ConceptDescriptor myConceptReferenceType = createDescriptorForReferenceType();
  /*package*/ final EnumerationDescriptor myEnumerationMonth = new EnumerationDescriptor_Month();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptArticle, myConceptAuthor, myConceptBook, myConceptBooklet, myConceptConference, myConceptInBook, myConceptInProceedings, myConceptIncollection, myConceptLibraries, myConceptManual, myConceptMasterThesis, myConceptMisc, myConceptPhdThesis, myConceptProceedings, myConceptReferenceType);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Article:
        return myConceptArticle;
      case LanguageConceptSwitch.Author:
        return myConceptAuthor;
      case LanguageConceptSwitch.Book:
        return myConceptBook;
      case LanguageConceptSwitch.Booklet:
        return myConceptBooklet;
      case LanguageConceptSwitch.Conference:
        return myConceptConference;
      case LanguageConceptSwitch.InBook:
        return myConceptInBook;
      case LanguageConceptSwitch.InProceedings:
        return myConceptInProceedings;
      case LanguageConceptSwitch.Incollection:
        return myConceptIncollection;
      case LanguageConceptSwitch.Libraries:
        return myConceptLibraries;
      case LanguageConceptSwitch.Manual:
        return myConceptManual;
      case LanguageConceptSwitch.MasterThesis:
        return myConceptMasterThesis;
      case LanguageConceptSwitch.Misc:
        return myConceptMisc;
      case LanguageConceptSwitch.PhdThesis:
        return myConceptPhdThesis;
      case LanguageConceptSwitch.Proceedings:
        return myConceptProceedings;
      case LanguageConceptSwitch.ReferenceType:
        return myConceptReferenceType;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationMonth);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForArticle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "Article", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd30fbfaL);
    b.class_(false, false, false);
    b.parent(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/1874583808866581498");
    b.version(2);
    b.property("title", 0x1a03dc0acd30fbfeL).type(PrimitiveTypeId.STRING).origin("1874583808866581502").done();
    b.property("journal", 0x1a03dc0acd30fc01L).type(PrimitiveTypeId.STRING).origin("1874583808866581505").done();
    b.property("year", 0x1a03dc0acd30fc06L).type(PrimitiveTypeId.INTEGER).origin("1874583808866581510").done();
    b.property("volume", 0x1a03dc0acd30fc0dL).type(PrimitiveTypeId.STRING).origin("1874583808866581517").done();
    b.property("number", 0x1a03dc0acd30fc16L).type(PrimitiveTypeId.STRING).origin("1874583808866581526").done();
    b.property("pages", 0x1a03dc0acd30fc21L).type(PrimitiveTypeId.STRING).origin("1874583808866581537").done();
    b.aggregate("authors", 0x1a03dc0acd30fbfbL).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(true).origin("1874583808866581499").done();
    b.alias("ARTICLE");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAuthor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "Author", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L);
    b.class_(false, false, false);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/1874583808865381184");
    b.version(2);
    b.property("firstName", 0x1a03dc0acd30fd73L).type(PrimitiveTypeId.STRING).origin("1874583808866581875").done();
    b.property("middleName", 0x1a03dc0acd30fd76L).type(PrimitiveTypeId.STRING).origin("1874583808866581878").done();
    b.property("surname", 0x1a03dc0acd30fd7bL).type(PrimitiveTypeId.STRING).origin("1874583808866581883").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBook() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "Book", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x536290f98ef2267aL);
    b.class_(false, false, false);
    b.parent(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/6008524254385153658");
    b.version(2);
    b.property("title", 0x536290f98ef2267dL).type(PrimitiveTypeId.STRING).origin("6008524254385153661").done();
    b.property("publisher", 0x536290f98ef2267fL).type(PrimitiveTypeId.STRING).origin("6008524254385153663").done();
    b.property("address", 0x536290f98ef22682L).type(PrimitiveTypeId.STRING).origin("6008524254385153666").done();
    b.property("year", 0x536290f98ef22686L).type(PrimitiveTypeId.INTEGER).origin("6008524254385153670").done();
    b.aggregate("authors", 0x536290f98ef2267bL).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(true).origin("6008524254385153659").done();
    b.alias("BOOK");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBooklet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "Booklet", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1da23d5c1241dbeaL);
    b.class_(false, false, false);
    b.parent(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/2135336638979628010");
    b.version(2);
    b.property("title", 0x1da23d5c1241dbf1L).type(PrimitiveTypeId.STRING).origin("2135336638979628017").done();
    b.property("howpublished", 0x1da23d5c1241dbf3L).type(PrimitiveTypeId.STRING).origin("2135336638979628019").done();
    b.property("month", 0x1da23d5c1241dbf6L).type(MetaIdFactory.dataTypeId(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd30fcccL)).origin("2135336638979628022").done();
    b.property("year", 0x1da23d5c1241dbfaL).type(PrimitiveTypeId.INTEGER).origin("2135336638979628026").done();
    b.aggregate("authors", 0x1da23d5c1241dbefL).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(true).origin("2135336638979628015").done();
    b.alias("BOOKLET");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "Conference", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1da23d5c1241dbffL);
    b.class_(false, false, false);
    b.parent(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/2135336638979628031");
    b.version(2);
    b.property("title", 0x1da23d5c1241dc02L).type(PrimitiveTypeId.STRING).origin("2135336638979628034").done();
    b.property("bookTitle", 0x1da23d5c1241dc04L).type(PrimitiveTypeId.STRING).origin("2135336638979628036").done();
    b.property("series", 0x1da23d5c1241dc07L).type(PrimitiveTypeId.STRING).origin("2135336638979628039").done();
    b.property("year", 0x1da23d5c1241dc0bL).type(PrimitiveTypeId.INTEGER).origin("2135336638979628043").done();
    b.property("pages", 0x1da23d5c1241dc10L).type(PrimitiveTypeId.STRING).origin("2135336638979628048").done();
    b.property("publisher", 0x1da23d5c1241dc16L).type(PrimitiveTypeId.STRING).origin("2135336638979628054").done();
    b.property("address", 0x1da23d5c1241dc1dL).type(PrimitiveTypeId.STRING).origin("2135336638979628061").done();
    b.aggregate("authors", 0x1da23d5c1241dc00L).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(true).origin("2135336638979628032").done();
    b.alias("CONFERENCE");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInBook() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "InBook", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd30fc2eL);
    b.class_(false, false, false);
    b.parent(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/1874583808866581550");
    b.version(2);
    b.property("title", 0x1a03dc0acd30fc32L).type(PrimitiveTypeId.STRING).origin("1874583808866581554").done();
    b.property("bookTitle", 0x1a03dc0acd30fc35L).type(PrimitiveTypeId.STRING).origin("1874583808866581557").done();
    b.property("year", 0x1a03dc0acd30fc3aL).type(PrimitiveTypeId.STRING).origin("1874583808866581562").done();
    b.property("publisher", 0x1a03dc0acd30fc41L).type(PrimitiveTypeId.STRING).origin("1874583808866581569").done();
    b.property("address", 0x1a03dc0acd30fc4aL).type(PrimitiveTypeId.STRING).origin("1874583808866581578").done();
    b.property("pages", 0x1a03dc0acd30fc55L).type(PrimitiveTypeId.STRING).origin("1874583808866581589").done();
    b.aggregate("authors", 0x1a03dc0acd30fc2fL).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(true).origin("1874583808866581551").done();
    b.alias("INBOOK");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInProceedings() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "InProceedings", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd30fc62L);
    b.class_(false, false, false);
    b.parent(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/1874583808866581602");
    b.version(2);
    b.property("title", 0x1a03dc0acd30fc66L).type(PrimitiveTypeId.STRING).origin("1874583808866581606").done();
    b.property("bookTitle", 0x1a03dc0acd30fc69L).type(PrimitiveTypeId.STRING).origin("1874583808866581609").done();
    b.property("series", 0x1a03dc0acd30fc6eL).type(PrimitiveTypeId.STRING).origin("1874583808866581614").done();
    b.property("year", 0x1a03dc0acd30fc75L).type(PrimitiveTypeId.INTEGER).origin("1874583808866581621").done();
    b.property("pages", 0x1a03dc0acd30fc7eL).type(PrimitiveTypeId.STRING).origin("1874583808866581630").done();
    b.property("publisher", 0x1a03dc0acd30fc89L).type(PrimitiveTypeId.STRING).origin("1874583808866581641").done();
    b.property("address", 0x1a03dc0acd30fc96L).type(PrimitiveTypeId.STRING).origin("1874583808866581654").done();
    b.aggregate("authors", 0x1a03dc0acd30fc63L).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(true).origin("1874583808866581603").done();
    b.alias("INPROCEEDINGS");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIncollection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "Incollection", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x536290f98ef22695L);
    b.class_(false, false, false);
    b.parent(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/6008524254385153685");
    b.version(2);
    b.property("editor", 0x536290f98ef226bbL).type(PrimitiveTypeId.STRING).origin("6008524254385153723").done();
    b.property("title", 0x536290f98ef226a0L).type(PrimitiveTypeId.STRING).origin("6008524254385153696").done();
    b.property("booktitle", 0x536290f98ef226a2L).type(PrimitiveTypeId.STRING).origin("6008524254385153698").done();
    b.property("year", 0x536290f98ef226a5L).type(PrimitiveTypeId.INTEGER).origin("6008524254385153701").done();
    b.property("publisher", 0x536290f98ef226a9L).type(PrimitiveTypeId.STRING).origin("6008524254385153705").done();
    b.property("address", 0x536290f98ef226aeL).type(PrimitiveTypeId.STRING).origin("6008524254385153710").done();
    b.property("pages", 0x536290f98ef226b4L).type(PrimitiveTypeId.STRING).origin("6008524254385153716").done();
    b.aggregate("authors", 0x536290f98ef2269cL).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(true).origin("6008524254385153692").done();
    b.alias("INCOLLECTION");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLibraries() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "Libraries", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555e32e8L);
    b.class_(false, false, true);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/2178515694383936232");
    b.version(2);
    b.aggregate("type", 0x1e3ba47b555fd533L).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL).optional(false).ordered(true).multiple(true).origin("2178515694384043315").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForManual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "Manual", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x536290f98ef226c3L);
    b.class_(false, false, false);
    b.parent(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/6008524254385153731");
    b.version(2);
    b.property("title", 0x536290f98ef226c6L).type(PrimitiveTypeId.STRING).origin("6008524254385153734").done();
    b.property("organization", 0x536290f98ef226c8L).type(PrimitiveTypeId.STRING).origin("6008524254385153736").done();
    b.property("address", 0x536290f98ef226cbL).type(PrimitiveTypeId.STRING).origin("6008524254385153739").done();
    b.property("year", 0x536290f98ef226cfL).type(PrimitiveTypeId.INTEGER).origin("6008524254385153743").done();
    b.aggregate("authors", 0x536290f98ef226c4L).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(true).origin("6008524254385153732").done();
    b.alias("MANUAL");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMasterThesis() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "MasterThesis", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1da23d5c1241dc25L);
    b.class_(false, false, false);
    b.parent(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/2135336638979628069");
    b.version(2);
    b.property("title", 0x1da23d5c1241dc28L).type(PrimitiveTypeId.STRING).origin("2135336638979628072").done();
    b.property("school", 0x1da23d5c1241dc2aL).type(PrimitiveTypeId.STRING).origin("2135336638979628074").done();
    b.property("year", 0x1da23d5c1241dc2dL).type(PrimitiveTypeId.INTEGER).origin("2135336638979628077").done();
    b.property("address", 0x1da23d5c1241dc31L).type(PrimitiveTypeId.STRING).origin("2135336638979628081").done();
    b.property("month", 0x1da23d5c1241dc36L).type(MetaIdFactory.dataTypeId(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd30fcccL)).origin("2135336638979628086").done();
    b.aggregate("author", 0x1da23d5c1241dc26L).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(false).origin("2135336638979628070").done();
    b.alias("MASTER_THESIS");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMisc() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "Misc", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1da23d5c1241dc3cL);
    b.class_(false, false, false);
    b.parent(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/2135336638979628092");
    b.version(2);
    b.property("title", 0x1da23d5c1241dc3fL).type(PrimitiveTypeId.STRING).origin("2135336638979628095").done();
    b.property("howpublshed", 0x1da23d5c1241dc41L).type(PrimitiveTypeId.STRING).origin("2135336638979628097").done();
    b.property("year", 0x1da23d5c1241dc44L).type(PrimitiveTypeId.INTEGER).origin("2135336638979628100").done();
    b.property("note", 0x1da23d5c1241dc48L).type(PrimitiveTypeId.STRING).origin("2135336638979628104").done();
    b.aggregate("authors", 0x1da23d5c1241dc3dL).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(true).origin("2135336638979628093").done();
    b.alias("MISC");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPhdThesis() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "PhdThesis", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd30fca5L);
    b.class_(false, false, false);
    b.parent(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/1874583808866581669");
    b.version(2);
    b.property("title", 0x1a03dc0acd30fca9L).type(PrimitiveTypeId.STRING).origin("1874583808866581673").done();
    b.property("school", 0x1a03dc0acd30fcacL).type(PrimitiveTypeId.STRING).origin("1874583808866581676").done();
    b.property("address", 0x1a03dc0acd30fcb1L).type(PrimitiveTypeId.STRING).origin("1874583808866581681").done();
    b.property("year", 0x1a03dc0acd30fcb8L).type(PrimitiveTypeId.INTEGER).origin("1874583808866581688").done();
    b.property("month", 0x1a03dc0acd30fcc1L).type(MetaIdFactory.dataTypeId(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd30fcccL)).origin("1874583808866581697").done();
    b.aggregate("author", 0x1a03dc0acd30fca6L).target(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1a03dc0acd1eab40L).optional(false).ordered(true).multiple(false).origin("1874583808866581670").done();
    b.alias("PHD_THESIS");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProceedings() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "Proceedings", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x536290f98ef226d4L);
    b.class_(false, false, false);
    b.parent(0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/6008524254385153748");
    b.version(2);
    b.property("editor", 0x536290f98ef226f0L).type(PrimitiveTypeId.STRING).origin("6008524254385153776").done();
    b.property("title", 0x536290f98ef226d5L).type(PrimitiveTypeId.STRING).origin("6008524254385153749").done();
    b.property("series", 0x536290f98ef226d7L).type(PrimitiveTypeId.STRING).origin("6008524254385153751").done();
    b.property("volume", 0x536290f98ef226daL).type(PrimitiveTypeId.STRING).origin("6008524254385153754").done();
    b.property("publisher", 0x536290f98ef226deL).type(PrimitiveTypeId.STRING).origin("6008524254385153758").done();
    b.property("address", 0x536290f98ef226e3L).type(PrimitiveTypeId.STRING).origin("6008524254385153763").done();
    b.property("year", 0x536290f98ef226e9L).type(PrimitiveTypeId.INTEGER).origin("6008524254385153769").done();
    b.alias("PROCEEDINGS");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReferenceType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ReferenceLanguage", "ReferenceType", 0x28685c99a6841f2L, 0x9f1069a76b1b1f42L, 0x1e3ba47b555fd52cL);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7832ba79-122e-452d-b064-5ac586f5bd58(ReferenceLanguage.structure)/2178515694384043308");
    b.version(2);
    return b.create();
  }
}
