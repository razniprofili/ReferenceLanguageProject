package ReferenceLanguage.actions;

/*Generated by MPS */

import jetbrains.mps.actions.descriptor.BaseActionAspectDescriptor;
import jetbrains.mps.openapi.actions.descriptor.ActionAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.actions.descriptor.NodeFactory;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;

public class ActionAspectDescriptorImpl extends BaseActionAspectDescriptor implements ActionAspectDescriptor {
  private static final String LANGUAGE_FQ_NAME = "ReferenceLanguage";

  @Override
  public Collection<NodeFactory> getFactories(SAbstractConcept concept) {
    if (LANGUAGE_FQ_NAME.equals(concept.getLanguage().getQualifiedName())) {
      switch (concept.getName()) {
        case "Article":
          return Collections.<NodeFactory>singletonList(new ArticleNum.NodeFactory_1250284339136412930());
        case "Book":
          return Collections.<NodeFactory>singletonList(new BookNum.NodeFactory_2432563194114875378());
        case "Booklet":
          return Collections.<NodeFactory>singletonList(new BookletNum.NodeFactory_1530532506010541824());
        case "Conference":
          return Collections.<NodeFactory>singletonList(new ConferenceNum.NodeFactory_1530532506010542963());
        case "InBook":
          return Collections.<NodeFactory>singletonList(new InBookNumber.NodeFactory_1250284339137095562());
        case "InProceedings":
          return Collections.<NodeFactory>singletonList(new InProceedingsNum.NodeFactory_1250284339137110870());
        case "Incollection":
          return Collections.<NodeFactory>singletonList(new IncollectionNum.NodeFactory_2432563194114882493());
        case "Manual":
          return Collections.<NodeFactory>singletonList(new ManualNum.NodeFactory_2432563194114880415());
        case "MasterThesis":
          return Collections.<NodeFactory>singletonList(new MasterThesisNum.NodeFactory_1530532506010544738());
        case "Misc":
          return Collections.<NodeFactory>singletonList(new MiscNum.NodeFactory_1530532506010545868());
        case "PhdThesis":
          return Collections.<NodeFactory>singletonList(new PhdThesisNum.NodeFactory_1250284339136916490());
        case "Proceedings":
          return Collections.<NodeFactory>singletonList(new ProceedingsNum.NodeFactory_2432563194114881344());
        default:
      }
    }
    return Collections.<NodeFactory>emptyList();
  }

}
